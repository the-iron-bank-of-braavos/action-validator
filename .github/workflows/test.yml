on:
  workflow_call:
    inputs:
      origin-repo:
        description: 'Repository where action to be cloned is located'
        required: true
        type: string
      commit-sha:
        description: 'Commit SHA for retrieve action exact version reference, it will define branch name on new repository'
        required: true
        type: string
      target-repo:
        description: 'New repository name for action to be stored. Composed by: org-name/repo-name'
        required: true
        type: string

jobs:
  action-clone-validator:
    runs-on: ubuntu-latest
    steps:
      - name: 'Action clone validator'
        run: |
          if [[ (curl https://api.github.com/repos/${{ inputs.target-repo }}) -eq 0 ]]; then
            if [[ (git branch --contains ${{ inputs.commit-sha }}) -gt 0 ]]; then
              git clone ${{ inputs.origin-repo }}
              cd ${{ inputs.origin-repo }}
              rm -rf .git
              git checkout ${{ inputs.commit-sha }}
              git init -b ${{ inputs.commit-sha }}
              git add . && git commit ${{ inputs.commit-sha }}
              git push -u origin ${{ inputs.commit-sha }}
            else
              echo "Repository and branch already exists"
            fi
          else
              git clone ${{ inputs.origin-repo }}
              cd ${{ inputs.origin-repo }}
              rm -rf .git
              git checkout ${{ inputs.commit-sha }}
              git init -b ${{ inputs.commit-sha }}
              git add . && git commit ${{ inputs.commit-sha }}
              gh repo create ${{ inputs.target-repo }} --private --source=. --remote=upstream
          fi