on:
  workflow_call:
    inputs:
      origin-repo:
        description: 'Repository where action to be cloned is located'
        required: true
        type: string
      commit-sha:
        description: 'Commit SHA for retrieve action exact version reference'
        required: true
        type: string
      target-repo:
        description: 'New repository name for action to be stored. Composed by: org-name/repo-name'
        required: true
        type: string
      target-commit-branch:
        description: 'Commit message and branch name for action to be upload on new repository'
        required: true
        type: string

jobs:
  action-clone-validator:
    runs-on: ubuntu-latest
    steps:
      run: |
        if [[ curl https://api.github.com/repos/${{ inputs.target-repo }} ]]  ; then
          if [[ git branch --contains ${{ inputs.target-commit-branch }} -gt 0 ]]; then
            git clone ${{ inputs.origin-repo }}
            cd ${{ inputs.origin-repo }}
            rm -rf .git
            git checkout ${{ inputs.commit-sha }}
            git init -b ${{ inputs.target-commit-branch }}
            git add . && git commit ${{ inputs.target-commit-branch }}
            git push -u origin ${{ inputs.target-commit-branch }}
          else
            echo "Repository and commit already exits"
          fi
        else
            git clone ${{ inputs.origin-repo }}
            cd ${{ inputs.origin-repo }}
            rm -rf .git
            git checkout ${{ inputs.commit-sha }}
            git init -b ${{ inputs.target-commit-branch }}
            git add . && git commit ${{ inputs.target-commit-branch }}
            gh repo create ${{ inputs.target-repo }} --private --source=. --remote=upstream
        fi